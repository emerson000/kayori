version: '3.8'

services:
  frontend:
    build:
      context: ./services/frontend
    ports:
      - "3000:3000"
    environment:
      - BACKEND_URL=http://kayori-backend-service:3001
    depends_on:
      - backend
    networks:
      - kayori-network

  backend:
    build:
      context: ./services/backend
    ports:
      - "3001:3001"
    depends_on:
      - database
      - kafka
    networks:
      - kayori-network

  database:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: kayori
    networks:
      - kayori-network

  kafka-ui:
      container_name: kafka-ui
      image: provectuslabs/kafka-ui:latest
      ports:
        - "9000:8080"
      environment:
        KAFKA_CLUSTERS_0_NAME: dev-local
        KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
        KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      depends_on:
        - "kafka"
      networks:
        - kayori-network

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    ports:
      - "9092:9092"
      - "9997:9997"
    environment:
      CLUSTER_ID: "Ynf7N8PUR6GLybrJW7MriA"
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://localhost:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:29093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: kafka
    networks:
      - kayori-network

networks:
  kayori-network:
    driver: bridge
