services:
  frontend:
    build:
      context: ./services/frontend
    ports:
      - "3000:3000"
    environment:
      - BACKEND_URL=http://backend:3001
      - NODE_ENV=development
      - DEV_MODE=true
    volumes:
      - ./services/frontend/:/app
    depends_on:
      - backend
    networks:
      - kayori-network

  backend:
    hostname: backend
    build:
      context: ./services/backend
    ports:
      - "3001:3001"
      - "6379:6379"
    depends_on:
      - database
      - kafka
    volumes:
      - ./services/backend/:/app
    networks:
      - kayori-network
    environment:
      - DEV_MODE=true

  database:
    hostname: mongo
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: kayori
    volumes:
      - mongo-data:/data/db
    networks:
      - kayori-network
    ports:
      - "27017:27017"

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: kayori
      ME_CONFIG_MONGODB_URL: mongodb://root:kayori@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    networks:
      - kayori-network
    depends_on:
      - database

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "9000:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: dev-local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
    depends_on:
      - "kafka"
    networks:
      - kayori-network

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    ports:
      - "9092:9092"
      - "9997:9997"
    environment:
      CLUSTER_ID: "Ynf7N8PUR6GLybrJW7MriA"
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:29093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: kafka
    networks:
      - kayori-network
    volumes:
      - kafka-data:/var/lib/kafka/data

  drone:
    build:
      context: ./services/drone
    depends_on:
      - kafka
      - database
    volumes:
      - ./services/drone/:/app
    environment:
      - KAFKA_BROKER=kafka:29092
      - DEV_MODE=true
    networks:
      - kayori-network

  ollama:
    hostname: ollama
    build:
      context: ./services/ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - kayori-network

networks:
  kayori-network:
    driver: bridge

volumes:
  mongo-data:
  kafka-data:
  ollama-data:
